// Model for 1 bit image data

enum {SMC=1,APM1,DS,AVG,SCM,RCM,CM,MX,ST,MM};
int r0,r1,r2,r3,N,w;
int cxt[11]={};  // contexts
char buffer[0x400000]={};
enum {BMASK=0x3FFFFF};
int bufpos;
int buf(int i){
    return buffer[(bufpos-i)&BMASK];
}
int bufr(int i){
    return buffer[(i)&BMASK];
}

// update is called in VM after every bit
int update(int y,int c0,int bpos,int c4,int pos){ 
    int i;
    if (bpos== 0){ 
        buffer[bufpos]=c4&0xff;
        bufpos++;
        bufpos=bufpos&BMASK;
    }
    // update the contexts (pixels surrounding the predicted one)
    r0=(r0<<1)|y;
    r1=(r1<<1)|((buf(w-1)>>(7-bpos))&1);
    r2=(r2<<1)|((buf(w+w-1)>>(7-bpos))&1);
    r3=(r3<<1)|((buf(w+w+w-1)>>(7-bpos))&1);
    cxt[0]=0x100|(r0&0x7)+((r1>>4)&0x38)+((r2>>3)&0xc0);
    cxt[1]=0x200|((r0&1)|((r1>>4)&0x3e)|((r2>>2)&0x40)|((r3>>1)&0x80));
    cxt[2]=0x300|((r0&0x3f)^(r1&0x3ffe)^((r2<<2)&0x7f00)^((r3<<5)&0xf800));
    cxt[3]=0x400|((r0&0x3e)^(r1&0x0c0c)^(r2&0xc800));
    cxt[4]=0x100|(((r1&0x30)^(r3&0x0c0c))|(r0&3));
    cxt[5]=0x800|(((!r0)&0x444)|(r1&0xC0C)|(r2&0xAE3)|(r3&0x51C));
    cxt[6]=0xC00|((r0&1)|((r1>>4)&0x1d)|((r2>>1)&0x60)|(r3&0xC0));
    cxt[7]=0x1000|(((r0>>4)&0x2AC)|(r1&0xA4)|(r2&0x349)|((!r3)&0x14D));
    cxt[8]=0x2000 |  ((r0&7)|((r1>>1)&0x3F8)|((r2<<5)&0xC00));//
    cxt[9]=0x10000|  ((r0&0x3f)^(r1&0x3ffe)^(r2<<2&0x7f00)^(r3<<5&0xf800));
    cxt[10]=0x20000|((r0&0x3e)^(r1&0x0c0c)^(r2&0xc800));
    for (i=0;i<N;++i) 
    vmx(SMC,0,cxt[i]);
    vmx(MX,0,((r0&0x7)|((r1>>4)&0x38)|((r2>>3)&0xc0)) &0xff);
    vmx(MX,0,(((r1&0x30)^(r3&0x0c))|(r0&3)) &0xff);
    vmx(MX,0,((r0&1)|((r1>>4)&0x3e)|((r2>>2)&0x40)|((r3>>1)&0x80)) &0xff);
    vmx(MX,0,((r0&0x3e)^((r1>>8)&0x0c)^((r2>>8)&0xc8)) &0xff);
    vmx(MX,0,c0); 
    return 0;
}
//VM calls this after every image block
void block(int a,int b) { 
    w=a; //get block info, image width
}
// main is called only once after VM init.
int main() {
    N=11;
    //SMC,APM1,DS,AVG,SCM,RCM,CM,MX,ST,MM
    vms(N,0,0,0,1,0,0,1,0,0);
    vmi(SMC,0,0x10000,1023,0);
    vmi(SMC,1,0x10000,1023,0);
    vmi(SMC,2,0x10000,1023,0);
    vmi(SMC,3,0x10000,1023,0);
    vmi(SMC,4,0x10000,1023,0);
    vmi(SMC,5,0x10000,1023,0);
    vmi(SMC,6,0x10000,1023,0);
    vmi(SMC,7,0x10000,1023,0);
    vmi(SMC,8,0x10000,1023,0);
    vmi(SMC,9,0x20000,1023,0);
    vmi(SMC,10,0x40000,1023,0);
    vmi(SCM,0,8,0,0);
    vmi(MX,0,N*2+2,256*5,5);
    mxs(0,256);
    mxs(0,256);
    mxs(0,256);
    mxs(0,256);
    mxs(0,256);
    r0=r1=r2=r3=0; 
    bufpos=0;
}